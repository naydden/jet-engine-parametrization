function [ T,P,M9 ] = ToveraPrimari( P0,T,PI,gam,P,TAU,mixer )
T.t9=T.t6;
P.t9=PI.n*P.t6;
P.s9=P0;
if mixer == true
    gam.hot=gam.mixer;
end
M9=sqrt((2/(gam.hot-1))*((TAU.r*TAU.d*TAU.c*TAU.b*TAU.t*TAU.n)-1));
if M9>1
    M9=1;
    P.s9=P.t9/(1+((gam.hot-1)/2)^(gam.hot/(gam.hot-1)));
end
T.s9=T.t9/(1+((gam.hot-1)/2)*M9^2);

end

% function [M6, Tt6, Pt6] = mixer(Tt5, Pt5, Cp5, gamma5, Tt13, M13, Cp13, gamma13, alpha_p, M5)
function [ T, P, M6, gam, CP] = mixer(T,P, CP, gam,m)
R = 287;
% this function computes the mixer of a turbofan.

alpha_p = m.sec/m.prim;
CP.mixer = (CP.hot + alpha_p*CP.cold)/(1+alpha_p);
gam.mixer = CP.mixer/(CP.mixer - R);
T.t6 = (CP.hot*T.t5 + alpha_p*CP.cold*T.t13)/((1+alpha_p)*CP.mixer);

% Say M5 = 1;
M5 = 1;
P.s5 = P.t5 / ((1+((gam.hot-1)*M5^2)/2)^(gam.hot/(gam.hot-1)));

% Since we want the flux at 6 to be as less turbulent as possible, we say
% that P5 = P13 = P6
P.s13 = P.s5;
P.s6 = P.s5;

M13 = sqrt(2/(gam.cold-1)*((Pt13/P13)^((gamma-1)/(gamma)))-1);

% we find M6 now by computing F6 = F5 + F13
phi_6 = R*Tt6/(gamma6*((sqrt(R*Tt5/(gamma5*phi(M5,gamma5)))+alpha_p*sqrt(R*Tt13/(gamma13*phi(M13,gamma13))))/(1+alpha_p))^2)

M6s = sym('M6s');
assume(M6s < 1 & M6s > 0);
eqn = phi_6 == ((M6s*sqrt(1+(gamma6-1)*0.5*M6s^2))/(1+gamma6*M6s^2))^2;
M6 = double(solve(eqn,M6s));

Pt6 = P6*(1+(gamma6-1)/2*M6)^(gamma6/(gamma6-1));



end

